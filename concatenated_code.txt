
# Code from: app.py

"""
John Leckie, SDEV 300, 22 Sep '23

Astronomy Web App

This is a Flask web application for a simple astronomy website. It includes routes to
different pages and displays the current date and time on the homepage.
"""

import hashlib  # Required for password hashing
from datetime import datetime
from flask import Flask, render_template, request, redirect, url_for, flash, session

app = Flask(__name__)
app.secret_key = '123456789'

# Store user data in a file
USER_DATA_FILE = 'user_data.txt'


def register():
    """
    Register users and store their information in a text file after validation.

    Returns:
        rendered template for registration page with flash messages
    """
    flash('', 'error')  # Clears existing flash messages for the session, if any
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        # Check if the username already exists in the file
        with open(USER_DATA_FILE, 'r', encoding='utf-8') as file:
            for line in file:
                stored_username, _ = line.strip().split(':')
                if username == stored_username:
                    flash('Username already exists. Please choose another username or return '
                          'to Login via below link.', 'error')
                    return render_template('register.html')

        # Validate password complexity
        if not (len(password) >= 12 and any(c.isupper() for c in password)
                and any(c.islower() for c in password) and any(c.isdigit() for c in password)
                and any(not c.isalnum() for c in password)):
            flash('Password does not meet complexity requirements', 'error')
        else:
            # Hash the password before storing it (for security)
            hashed_password = hashlib.sha256(password.encode()).hexdigest()

            # Write user data to the file (append mode)
            with open(USER_DATA_FILE, 'a', encoding='utf-8') as file:
                file.write(f'{username}:{hashed_password}\n')
                flash('Registered! Return to Login below.', 'success')

    return render_template('register.html')


def login():
    """
    Authenticate users and log them in if valid credentials are provided.

    Returns:
        rendered template for login page with flash messages
    """
    flash('', 'error')  # Clears existing flash messages for the session, if any
    reg_message = session.pop('reg_message', None)

    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        # Hash the provided password for comparison
        hashed_password = hashlib.sha256(password.encode()).hexdigest()

        # Check if the username and hashed password match any records in the file
        with open(USER_DATA_FILE, 'r', encoding='utf-8') as file:  # Opens file in read mode
            for line in file:
                stored_username, stored_hashed_password = line.strip().split(':')
                if username == stored_username and hashed_password == stored_hashed_password:
                    flash('Login successful', 'success')
                    session['logged_in'] = True  # Sets session as logged in. Important.
                    return redirect(url_for('home'))

        flash('Invalid username or password', 'error')

    return render_template('login.html', reg_message=reg_message)


def home():
    """
    Render the home page of the astronomy website.
    Redirects the user to the login page if they are not logged in.

    Returns:
        rendered template with current time
    """
    # Check if the user is logged in, if not, redirect to the login page
    if not session.get('logged_in'):
        return redirect(url_for('login'))

    current_time = datetime.now()
    return render_template('index.html', current_time=current_time)


def telescope_time():
    """
    Render the telescope time sign-up page.

    Returns:
        rendered template for telescope time page
    """
    # Check if the user is logged in, if not, redirect to the login page
    if not session.get('logged_in'):
        return redirect(url_for('login'))

    return render_template('telescope_time.html')


def supercomputer_time():
    """
    Render the supercomputer time request page.

    Returns:
        rendered template for supercomputer time page
    """
    # Check if the user is logged in, if not, redirect to the login page
    if not session.get('logged_in'):
        return redirect(url_for('login'))

    return render_template('supercomputer_time.html')


def planetarium():
    """
    Render the planetarium volunteer page.

    Returns:
        rendered template for planetarium volunteer page
    """
    # Check if the user is logged in, if not, redirect to the login page
    if not session.get('logged_in'):
        return redirect(url_for('login'))

    return render_template('planetarium.html')


def logout():
    """
    Log users out by clearing their session data.

    Returns:
        Redirects to the login page with a logout flash message
    """
    # Clear the user's session data to log them out
    session.clear()
    flash('Logout Successful!', 'success')
    return redirect(url_for('login'))


if __name__ == '__main__':
    app.run()

# Code from: styles.css

/* John Leckie, SDEV 300, 22 Sep '23
This is the stylesheet for the astronomy website. It controls the layout and appearance of elements
common to multiple pages.
 */

/* Global styles */
body {
    font-family: Arial, sans-serif;
    background-color: #000000;
    margin: 0 50px;
    padding: 0;
    background-image: url('images/6t3m7cg78dha1.jpg');
    background-size: cover;
    background-repeat: no-repeat;
    background-color: rgba(0, 0, 0, 1.0);
}

title {
    text-align: center;
}

h1 {
    color: lightskyblue; /* Text color */
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* Horizontal and vertical shadow offsets, blur
                                                    radius, and shadow color */
}


h1.center-heading {
    text-align: center;
}

h2 {
    color: khaki;
}

h3 {
    color: aquamarine;
}

/* Style the list containers for the background to go in */
ul, ol {
  margin: 0 auto;
  padding-left: 50px;
  color: white;
}

/* List items */
li {
  position: relative;
}

/* Element for the background */
li::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 220px;
  height: 100%;
  background-color: rgba(200, 200, 200, 0.2); /* Adjust the background color and transparency */
  z-index: -1; /* Place it behind the content */
}

/* Style the links within the list items */
li a {
  text-decoration: none;
  color: lightsalmon /* Your link color */
}

/* Style the text within the list items (optional) */
li span {
  color: #333; /* Text color */
}


p {
    margin-top: 10px;
    margin-bottom: auto;
    margin-left: 10px;
    margin-right: 50px;
    color: #fff;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

/* Styles for the form container */
form {
    background-color: darkslategray;
    color: white;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    max-width: 400px;
    margin: 0 auto;
    /* margin-left: -100px; */
    margin-top: 55px;
    z-index: 9999;
}

label {
    font-weight: bold;
}

input[type="text"],
input[type="email"],
input[type="date"],
textarea {
    max-width: 300px;
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 3px;
}

input[type="submit"] {
    background-color: #007BFF;
    color: #fff;
    padding: 10px 20px;
    border: none;
    cursor: pointer;
}

/* Navigation link styles */
a {
    text-decoration: none;
    color: #007BFF;
    margin-top: 10px;
    display: inline-block;
}

a:hover {
    text-decoration: underline;
}

/* Styles for the time strip */
.time-strip {
    background-color: dimgrey;
    height: 50px;
    text-align: center;
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Style for the current time */
.current-time {
    font-size: 24px; /* Adjust the font size as needed */
    color: #333; /* Choose a text color that stands out on the background */
}

/* CSS for the dedicated images on the 3 sub-pages */
.page-image {
    position: absolute;
    top: 20%;
    right: 50px;
    transform: translateY(50%);
    width: 400px;
    height: 400px;
    margin: 50px;
    z-index: 1;
}

/* Style for flash messages */
.flash-messages {
    width: 47.5ch;
    /* display: none; /* Initially hide the flash messages */
    /* background-color: #333333; /* Background color for the flash messages */
    color: white; /* Text color for the flash messages */
    text-align: center; /* Center-align the text inside the flash messages */
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    padding: 10px; /* Add some padding to the flash messages */
    position: fixed; /* Fixed position at the top of the screen */
    top: 60px;
    left: calc(50% - 25ch);
    right: 0;
    z-index: 9999; /* Ensure flash messages are on top of other content */
}


.flash-message {
    margin-bottom: 5px;
}

/* Style for the logout link */
.logout-link {
    position: relative;
    top: 0;
    bottom: 10px;
    left: 10px;
}

.logout-link a {
    text-decoration: none;
    color: #007BFF; /* Adjust link color */
}

.logout-link a:hover {
    text-decoration: underline;
}


# Code from: index.html

<!DOCTYPE html>
<html lang="">
<head>
    <title>Astronomy Website</title>
    <link rel="stylesheet" href="../static/styles.css">
    <style>
        /* Styles for the fancy image container */
        .image-container {
            position: fixed;
            bottom: 10px;
            right: 50px;
            width: 400px;
            height: 400px;
            overflow: hidden;
        }
        /* Styles for the rotating images */
        .image-container img {
            width: 100%;
            height: auto;
            position: absolute;
            opacity: 0;
            transition: opacity 1s ease-in-out;
        }
        .image-container img:first-child {
            opacity: 1;
        }
    </style>
</head>
<body>
    <h1 class="center-heading">Welcome to the Metro U Astronomy Portal</h1>
    <p>Welcome to the Metro University Observatory and Planetarium interface. Here, post grads
        and professors may sign up for a variety of activities. See below for links to each
        department.</p>
    <h2>Our Services</h2>
    <p>If you have a research plan, and you're working on your thesis, sign up for time on our
        large-aperture telescope.</p>
    <p>If you have data to process post-gathering, and your thesis is registered with the
        college, you can sign up for time on our Cray3000 supercomputer! Be sure you have your
        funding account number!</p>
    <p>Finally, you can help budding young astronomers find their calling, or recruit young STEM
    students to the field! Take the controls of the largest Planetarium in the Generic
        Region! People skills and patience are a must!</p>
    <ul>
        <li><a href="/telescope_time">Sign up for Telescope Time</a></li>
        <li><a href="/supercomputer_time">Request Supercomputer Time</a></li>
        <li><a href="/planetarium">Volunteer for the Planetarium</a></li>
    </ul>
    <h3>Our Friends</h3>
    <p>Some great places online we'd love to share with you--</p>
    <ol>
        <li><a href="https://www.jwst.nasa.gov/">The James Webb Telescope</a></li>
        <li><a href="https://www.astronomycast.com/">The Astronomy Cast Podcast</a></li>
        <li><a href="https://apod.nasa.gov/apod/astropix.html">Astronomy Pic of the Day</a></li>
    </ol>

    <div class="image-container">
        <img src="/static/images/image1.jpg" alt="Image 1">
        <img src="/static/images/image2.jpg" alt="Image 2">
        <img src="/static/images/image3.jpg" alt="Image 3">
        <img src="/static/images/image4.jpg" alt="Image 4">
        <img src="/static/images/image5.jpg" alt="Image 5">
    </div>

    <script>
        // JavaScript to rotate images
        const images = document.querySelectorAll('.image-container img');
        let currentImageIndex = 0;

        function rotateImages() {
            images[currentImageIndex].style.opacity = 0;
            currentImageIndex = (currentImageIndex + 1) % images.length;
            images[currentImageIndex].style.opacity = 1;
        }

        setInterval(rotateImages, 3000); // Change image every 3 seconds
    </script>

    <div class="time-strip">
        <!-- Display current date and time with seconds truncated -->
        <p>Current Date and Time: {{ current_time.strftime('%Y-%m-%d %H:%M') }}</p>
    </div>

    <div class="logout-link">
    <a href="{{ url_for('logout') }}">Logout</a>
    </div>

</body>
</html>

# Code from: login.html

<!-- Code from: templates/login.html -->
<!DOCTYPE html>
<html lang="">
<head>
    <title>Login to the Astronomy Portal</title>
    <link rel="stylesheet" href="../static/styles.css">
</head>
<body>
    <h1 class="center-heading">Login to the Astronomy Portal</h1>

<!-- Jinja2 sorcery to display flash messages -->
{% with messages = get_flashed_messages() %}
    {% if messages %}
        <div class="flash-messages">
            {% for message in messages %}
                <p>{{ message }}</p>
            {% endfor %}
        </div>
    {% endif %}
{% endwith %}

    {% if reg_message %}
    <div class="flash-message">
        {{ reg_message }}
    </div>
    {% endif %}


    <form method="post">
        <table>
            <tr>
                <td><label for="username">Username</label></td>
                <td><input name="username" id="username" required></td>
            </tr>
            <tr>
                <td><label for="password">Password</label></td>
                <td><input type="password" name="password" id="password" required></td>
            </tr>
            <tr>
                <td colspan='2'><input type="submit" value="Login"></td>
            </tr>
        </table>
    </form>
    <p>Don't have an account? <a href="{{ url_for('register') }}">Register here</a></p>
</body>
</html>

# Code from: planetarium.html

<!DOCTYPE html>
<html lang="">
<style>
        /* Styles for the layout */
        .content-container {
            display: flex;
            justify-content: space-between;
        }

        .content-container .text-content {
            width: 50%;
        }

        .content-container .form-container {
            width: 35%;
        }
</style>

<head>
    <title>Volunteer for the Planetarium</title>
    <link rel="stylesheet" href="../static/styles.css">
</head>
<body>
    <h1 class="center-heading">Volunteer for the Planetarium</h1>
    <p>Join us in inspiring students with the wonders of the universe!</p>
 <!-- Wrap the content in a container for layout -->
    <div class="content-container">
        <!-- Text content to the right of the image -->
        <div class="text-content">
            <img src="../static/images/imageB.jpg" height="327" width="490" alt="Girl&Mobile"/>
            <h3>Volunteer Information</h3>
            <p>We know your time is valuable. Any time you can donate to help us with student outreach
            would be much appreciated! 30 to 40 students will be bussed from one of the high schools in
            the metro area to our Science Museum, where you'll spend approximately 90 minutes with
            them. Lesson plan and Planetarium routine are completely up to you! If you're
            comfortable, we ask that you then spend about half an hour fielding questions about your
            career and the subject of your presentation.</p>
            <p>Complete the form below to volunteer for the planetarium. For "Availability," we are
                asking for a general wedge of time, after which we will contact you for specifics.</p>
        </div>
        <!-- Form content to the left of the page -->
        <div class="form-container">
            <form>
                <label for="name">Your Name:</label>
                <input type="text" id="name" name="name"><br><br>

                <label for="availability">Availability:</label>
                <textarea id="availability" name="availability" rows="4" cols="50"></textarea><br><br>

                <label for="email">Email:</label>
                <input type="email" id="email" name="email"><br><br>

                <input type="submit" value="Submit">
            </form>
        </div>
    </div>

    <a href="/">Back to Home</a>

<div class="page-image" style="margin-top: 150px;">
    <img src="../static/images/image5.jpg" height="286" width="490" alt="Plane-arium">
</div>


<div class="logout-link">
    <a href="{{ url_for('logout') }}">Logout</a>
</div>

</body>
</html>

# Code from: register.html

<!-- Code from: templates/register.html -->
<!DOCTYPE html>
<html lang="">
<head>
    <title>Register for a University Astronomy Account</title>
    <link rel="stylesheet" href="../static/styles.css">
</head>
<body>
    <h1 class="center-heading">Register</h1>

<!-- Jinja2 sorcery to display flash messages -->
{% with messages = get_flashed_messages() %}
    {% if messages %}
        <div class="flash-messages">
            {% for message in messages %}
                <p>{{ message }}</p>
            {% endfor %}
        </div>
    {% endif %}
{% endwith %}


    <form method="post">
        <table>
            <tr>
                <td><label for="username">Username</label></td>
                <td><input name="username" id="username" required></td>
            </tr>
            <tr>
                <td><label for="password">Password</label></td>
                <td><input type="password" name="password" id="password" required></td>
            </tr>
            <tr>
                <td><label for="confirm_password">Confirm Password</label></td>
                <td><input type="password" name="confirm_password" id="confirm_password" required></td>
            </tr>
            <tr>
                <td colspan='2'>
                    <p>Password must meet the following criteria:</p>
                    <ul>
                        <li>At least 12 characters long</li>
                        <li>Contains at least one uppercase letter</li>
                        <li>Contains at least one lowercase letter</li>
                        <li>Contains at least one digit</li>
                        <li>Contains at least one special character</li>
                    </ul>
                </td>
            </tr>
            <tr>
                <td colspan='2'><input type="submit" value="Register"></td>
            </tr>
        </table>
    </form>
    <!-- Just in case a mistake was made and return to login is desired -->
    <p>Already have an account? <a href="{{ url_for('login') }}">Return to Login</a></p>
</body>
</html>

# Code from: supercomputer_time.html

<!DOCTYPE html>
<html lang="">
<head>
    <title>Request Supercomputer Time</title>
    <link rel="stylesheet" href="../static/styles.css">
    <style>
        /* CSS class for the table */
        .supercomputer-table {
            text-align: center;
            margin: 0 auto;
            border-collapse: collapse;
        }

        /* CSS styles for table headings (th) */
        .supercomputer-table th {
            background-color: darkslategray;
            padding: 10px;
            color: white;
            text-shadow: 0 0 2px black;
        }

        /* CSS styles for table cells (td) */
        .supercomputer-table td {
            padding: 5px;
            border: 1px solid white;
            color: white;
            text-shadow: 0 0 2px black;
        }
    </style>
</head>
<body>
    <h1 class="center-heading">Request Supercomputer Time</h1>
    <p>Submit your request for supercomputer processing time. You must have an active account
        and a funding source that is connected to your account number! Ensure you have attended
        the annual refresher training on data security or your request could be delayed.</p>
    <p>Use the table below to help plan your requested date(s) and time(s).</p>
    <br><br>
    <h2>Project Details</h2>
    <form>
        <label for="project">Project Name:</label>
        <input type="text" id="project" name="project"><br><br>

        <label for="description">Project Description:</label>
        <textarea id="description" name="description" rows="4" cols="50"></textarea><br><br>

        <label for="resources">Funding Acct #:</label>
        <input type="text" id="resources" name="resources"><br><br>

        <input type="submit" value="Submit">
    </form>

    <!-- Centered Table for Supercomputer Time -->
    <div style="text-align: center;">
        <h2>Current Supercomputer Time Slots</h2>
        <table class="supercomputer-table">
            <tr>
                <th>Date/Time Start</th>
                <th>Date/Time Stop</th>
                <th>Name</th>
                <th>Project</th>
            </tr>
            <tr>
                <td>2023-09-28 08:00 AM</td>
                <td>2023-09-28 10:00 AM</td>
                <td>John Doe</td>
                <td>Canopus B</td>
            </tr>
            <tr>
                <td>2023-09-29 01:00 PM</td>
                <td>2023-09-29 03:00 PM</td>
                <td>Jane Smith</td>
                <td>JWST Orion Arm</td>
            </tr>
            <tr>
                <td>2023-09-30 10:30 AM</td>
                <td>2023-09-30 12:30 PM</td>
                <td>Bob Johnson</td>
                <td>JWST Deep Field</td>
            </tr>
            <tr>
                <td>2023-10-01 03:45 PM</td>
                <td>2023-10-01 05:45 PM</td>
                <td>Alice Brown</td>
                <td>Mars Jumper Data</td>
            </tr>
            <tr>
                <td>2023-10-02 09:15 AM</td>
                <td>2023-10-02 11:15 AM</td>
                <td>Eve Davis</td>
                <td>Cygnus, Space Probe 1</td>
            </tr>
        </table>
    </div>

    <h3>Back to Home</h3>
    <a href="/">Back to Home</a>

    <div class="logout-link">
        <a href="{{ url_for('logout') }}">Logout</a>
    </div>
</body>
</html>

# Code from: telescope_time.html

<!DOCTYPE html>
<html lang="">
<head>
    <title>Telescope Time Sign-Up</title>
    <link rel="stylesheet" href="../static/styles.css">
 </head>
<body>
    <h1 class="center-heading">Sign Up for Telescope Time</h1>
    <p>Complete the form below to reserve telescope time. Be sure to include your academic
        advisor's name at the end. We will be contacting them for the financial details and to
        confirm your eligibility to use the scope.</p>
    <h2>Reservation Details</h2>
    <form>
        <label for="name">Name:</label>
        <input type="text" id="name" name="name"><br><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email"><br><br>

        <label for="date">Desired Start Date:</label>
        <input type="date" id="date" name="date"><br><br>

        <label for="advisor">Advisor's Name:</label>
        <input type="text" id="advisor" name="advisor's name"><br><br>

        <input type="submit" value="Submit">
    </form>

    <h3>Back to Home</h3>
    <a href="/">Back to Home</a>

<div class="page-image">
        <img src="../static/images/image1.jpg" height="408" width="612" alt="Telescope">
</div>

<div class="logout-link">
    <a href="{{ url_for('logout') }}">Logout</a>
</div>

</body>
</html>
